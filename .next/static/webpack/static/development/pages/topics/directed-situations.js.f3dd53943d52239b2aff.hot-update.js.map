{"version":3,"file":"static/webpack/static/development/pages/topics/directed-situations.js.f3dd53943d52239b2aff.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import NavbarComponent from \"./NavbarComponent\";\nimport MiniNav from \"./MiniNav\";\nimport SlideMenu from \"./SlideMenu\";\nimport SystemInfo from \"./SystemInfo\";\nimport Footer from \"./Footer\";\nimport { Card, Container, Alert } from \"shards-react\";\nimport HeaderImports from \"./HeaderImports\";\n\n// Assets\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport CSS from \"shards-ui/dist/css/shards.css\";\nimport \"../assets/css/carousel.css\";\nimport \"../assets/css/nf-carousel.css\";\nimport \"../assets/css/animate.css\";\nimport \"../assets/css/master.css\";\n\n// Javascript\nimport \"../assets/js/fontawesome.js\";\nimport \"../assets/js/mixpanel.js\";\nimport \"../assets/js/quantcast.js\";\nimport \"../assets/js/facebook.js\";\nimport \"../assets/js/mailchimp.js\";\n\nfunction askNotificationPermission() {\n  // function to actually ask the permissions\n  function handlePermission(permission) {\n    // Whatever the user answers, we make sure Chrome stores the information\n    if (!(\"permission\" in Notification)) {\n      Notification.permission = permission;\n    }\n\n    // set the button to shown or hidden, depending on what the user answers\n    if (\n      Notification.permission === \"denied\" ||\n      Notification.permission === \"default\"\n    ) {\n      notificationBtn.style.display = \"block\";\n    } else {\n      notificationBtn.style.display = \"none\";\n    }\n  }\n\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    console.log(\"This browser does not support notifications.\");\n  } else {\n    if (checkNotificationPromise()) {\n      Notification.requestPermission().then(permission => {\n        handlePermission(permission);\n      });\n    } else {\n      Notification.requestPermission(function(permission) {\n        handlePermission(permission);\n      });\n    }\n  }\n}\n\nfunction checkNotificationPromise() {\n  try {\n    Notification.requestPermission().then();\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\n// Other\nimport ReactGA from \"react-ga\";\nimport MessengerCustomerChat from \"react-messenger-customer-chat\";\n\n// Google Analytics\nReactGA.initialize(\"UA-146229442-1\");\n\n// Render on client side\nif (process.browser) {\n  ReactGA.initialize(\"UA-146229442-1\", {\n    debug: true,\n    alwaysSendToDefaultTracker: false,\n    titleCase: false,\n    gaOptions: {\n      userId: 123\n    }\n  });\n\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nconst Fragment = React.Fragment;\n\nif (process.browser) {\n}\n\nconst Layout = props => (\n  <Fragment>\n    <MessengerCustomerChat\n      pageId=\"105703077445673\"\n      appId=\"669007593616991\"\n      htmlRef=\"https://connect.facebook.net/en_US/sdk/xfbml.customerchat.js\"\n    />\n    <div\n      class=\"fb-customerchat\"\n      attribution=\"setup_tool\"\n      page_id=\"105703077445673\"\n    ></div>\n\n    <NavbarComponent />\n    <MiniNav />\n\n    <br />\n    <main role=\"main\" id=\"main\" className=\"main\">\n      <Fragment>{props.children}</Fragment>\n    </main>\n    <br />\n    <MiniNav />\n    <Footer />\n    <SystemInfo hide={true} />\n    <HeaderImports />\n  </Fragment>\n);\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AAvBA;AACA;AA2BA;;;;A","sourceRoot":""}