import { Subscription, IEnvironment, GraphQLTaggedNode, Observer, Variables, Snapshot } from 'relay-runtime';
export declare type ObserverOrCallback = Observer<void> | ((error: Error) => any);
import * as ReactRelayQueryFetcher from 'react-relay/lib/ReactRelayQueryFetcher';
import { ContainerResult, RefetchOptions } from './RelayHooksType';
declare class FragmentRefetch {
    _refetchSubscription: Subscription;
    _queryFetcher: ReactRelayQueryFetcher;
    constructor();
    dispose(): void;
    lookupInStore(environment: IEnvironment, operation: any, fetchPolicy: any): Snapshot;
    refetch(environment: IEnvironment, fragmentVariables: Variables, taggedNode: GraphQLTaggedNode, refetchVariables: Variables | ((fragmentVariables: Variables) => Variables), renderVariables: Variables, observerOrCallback: ObserverOrCallback, options: RefetchOptions, prevResult: ContainerResult, setResult: any): {
        dispose(): void;
    };
}
export default FragmentRefetch;
