{"version":3,"file":"react-use-audio-player.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n    useState,\n    useCallback,\n    useEffect,\n    useRef,\n    useContext\n} from \"react\"\nimport { Howl } from \"howler\"\n\nconst noop = () => {}\n\ninterface AudioSrcProps {\n    src: string\n    format?: string\n    autoplay?: boolean\n}\n\ninterface AudioPlayer {\n    player: Howl | null\n    load: (args: AudioSrcProps) => void\n    error: Error | null\n    loading: boolean\n    playing: boolean\n    stopped: boolean\n    ready: boolean\n}\n\ntype UseAudioPlayer = Omit<AudioPlayer, \"player\"> & {\n    play: Howl[\"play\"] | typeof noop\n    pause: Howl[\"pause\"] | typeof noop\n    stop: Howl[\"stop\"] | typeof noop\n    mute: Howl[\"mute\"] | typeof noop\n    seek: Howl[\"seek\"] | typeof noop\n}\n\nconst AudioPlayerContext = React.createContext<AudioPlayer | null>(null)\n\ninterface AudioPlayerProviderProps {\n    children: React.ReactNode\n    value?: AudioPlayer\n}\n\ninterface AudioPosition {\n    position: number\n    duration: number\n}\n\nexport function AudioPlayerProvider({\n    children,\n    value\n}: AudioPlayerProviderProps) {\n    const [player, setPlayer] = useState<Howl | null>(null)\n    const playerRef = useRef<Howl>()\n    const [error, setError] = useState<Error | null>(null)\n    const [loading, setLoading] = useState(true)\n    const [playing, setPlaying] = useState(false)\n    const [stopped, setStopped] = useState(true)\n\n    const load = useCallback(\n        ({ src, format, autoplay = false }: AudioSrcProps) => {\n            let wasPlaying = false\n            if (playerRef.current) {\n                // don't do anything if we're asked to reload the same source\n                // @ts-ignore the _src argument actually exists\n                if (playerRef.current._src === src) return\n                wasPlaying = playerRef.current.playing()\n                // destroys the previous player\n                playerRef.current.unload()\n            }\n\n            // create a new player\n            const howl = new Howl({\n                src,\n                format,\n                autoplay: wasPlaying || autoplay, // continues playing next song\n                onload: () => {\n                    setError(null)\n                    setStopped(true)\n                    setLoading(false)\n                },\n                onplay: () => {\n                    // prevents howl from playing the same song twice\n                    if (!howl.playing()) return\n                    setPlaying(true)\n                    setStopped(false)\n                },\n                onend: () => {\n                    setStopped(true)\n                    setPlaying(false)\n                },\n                onpause: () => void setPlaying(false),\n                onstop: () => {\n                    setStopped(true)\n                    setPlaying(false)\n                },\n                onplayerror: (_id, error) => {\n                    setError(new Error(\"[Play error] \" + error))\n                    setPlaying(false)\n                    setStopped(true)\n                },\n                onloaderror: (_id, error) => {\n                    setError(new Error(\"[Load error] \" + error))\n                    setLoading(false)\n                }\n            })\n\n            setPlayer(howl)\n            playerRef.current = howl\n        },\n        []\n    )\n\n    useEffect(() => {\n        // unload the player on unmount\n        return () => {\n            if (playerRef.current) playerRef.current.unload()\n        }\n    }, [])\n\n    const contextValue: AudioPlayer = value\n        ? value\n        : {\n              player,\n              load,\n              error,\n              loading,\n              playing,\n              stopped,\n              ready: !loading && !error\n          }\n\n    return (\n        <AudioPlayerContext.Provider value={contextValue}>\n            {children}\n        </AudioPlayerContext.Provider>\n    )\n}\n\nexport const useAudioPlayer = (props?: AudioSrcProps): UseAudioPlayer => {\n    const { player, load, ...context } = useContext(AudioPlayerContext)!\n\n    const { src, format, autoplay } = props || {}\n\n    useEffect(() => {\n        // if useAudioPlayer is called without arguments\n        // don't do anything: the user will have access\n        // to the current context\n        if (!src) return\n        load({ src, format, autoplay })\n    }, [src, format, autoplay, load])\n\n    return {\n        ...context,\n        play: player ? player.play.bind(player) : noop,\n        pause: player ? player.pause.bind(player) : noop,\n        stop: player ? player.stop.bind(player) : noop,\n        mute: player ? player.mute.bind(player) : noop,\n        seek: player ? player.seek.bind(player) : noop,\n        load\n    }\n}\n\n// gives current audio position state - updates in an animation frame loop for animating audio visualizations\nexport const useAudioPosition = (): AudioPosition => {\n    const { player, playing, stopped } = useContext(AudioPlayerContext)!\n\n    const [position, setPosition] = useState(0)\n    const [duration, setDuration] = useState(0)\n\n    // sets position and duration on player initialization and when the audio is stopped\n    useEffect(() => {\n        if (player) {\n            setPosition(player.seek() as number)\n            setDuration(player.duration() as number)\n        }\n    }, [player, stopped])\n\n    // updates position on a one second loop\n    useEffect(() => {\n        let timeout: number\n        if (player && playing)\n            timeout = window.setInterval(\n                () => setPosition(player.seek() as number),\n                1000\n            )\n        return () => clearTimeout(timeout)\n    }, [player, playing])\n\n    return { position, duration }\n}\n"],"names":["noop","AudioPlayerContext","React","createContext","AudioPlayerProvider","_a","children","value","_b","player","setPlayer","playerRef","useRef","_c","error","setError","_d","loading","setLoading","_e","playing","setPlaying","_f","stopped","setStopped","load","useCallback","src","format","autoplay","wasPlaying","current","_src","unload","howl","Howl","onload","onplay","onend","onpause","onstop","onplayerror","_id","Error","onloaderror","useEffect","contextValue","ready","Provider","useAudioPlayer","props","context","play","bind","pause","stop","mute","seek","useAudioPosition","position","setPosition","duration","setDuration","timeout","window","setInterval","clearTimeout"],"mappings":"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"}