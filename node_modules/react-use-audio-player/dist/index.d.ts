/// <reference types="howler" />
import React from "react";
declare const noop: () => void;
interface AudioSrcProps {
    src: string;
    format?: string;
    autoplay?: boolean;
}
interface AudioPlayer {
    player: Howl | null;
    load: (args: AudioSrcProps) => void;
    error: Error | null;
    loading: boolean;
    playing: boolean;
    stopped: boolean;
    ready: boolean;
}
declare type UseAudioPlayer = Omit<AudioPlayer, "player"> & {
    play: Howl["play"] | typeof noop;
    pause: Howl["pause"] | typeof noop;
    stop: Howl["stop"] | typeof noop;
    mute: Howl["mute"] | typeof noop;
    seek: Howl["seek"] | typeof noop;
};
interface AudioPlayerProviderProps {
    children: React.ReactNode;
    value?: AudioPlayer;
}
interface AudioPosition {
    position: number;
    duration: number;
}
export declare function AudioPlayerProvider({ children, value }: AudioPlayerProviderProps): JSX.Element;
export declare const useAudioPlayer: (props?: AudioSrcProps | undefined) => UseAudioPlayer;
export declare const useAudioPosition: () => AudioPosition;
export {};
